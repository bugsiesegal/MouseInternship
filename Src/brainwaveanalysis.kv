<Menu>:
    rows: 1

    canvas:
        Color:
            rgb: .39215686274, .39215686274, .39215686274
        Rectangle:
            size: self.size
            pos: self.pos

<BaseScreen>:
    canvas:
        Color:
            rgb: .23529411764, .23529411764, .23529411764
        Rectangle:
            size: self.size
            pos: self.pos

<AnalysisScreen>:
    GridLayout:
        rows: 1
        size_hint_y: 0.2
        TextInput:
            id: window_split
            input_filter: 'int'
        Button:
            text: 'Split Data'
            on_release: root.split_data(int(window_split.text))

<AIScreen>:
    GridLayout:
        rows: 2
        cols: 4
        size_hint_y: 0.2
        pos_hint: {"top": 0.8}
        TextInput:
            id: compression
            hint_text: "Number of Behaviors"
        TextInput:
            id: dropout
            hint_text: "Dropout"
        TextInput:
            id: learning_rate
            hint_text: "Learning Rate"
        Button:
            text: "Build"
            on_release: root.build_ai(int(compression.text), float(dropout.text), float(learning_rate.text))
        TextInput:
            id: epochs
            hint_text: "Epochs"
        Button:
            text: "Train AI"
            on_release: root.train_ai(int(epochs.text))

    GridLayout:
        rows: 1
        size_hint_y: 0.2

        TextInput:
            id: data_output_path
            hint_text: "Data Output Path"
        Button:
            text: "Predict Behavior Data"
            on_release: root.predict_behavior(data_output_path.text)
